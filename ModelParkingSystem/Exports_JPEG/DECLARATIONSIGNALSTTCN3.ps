%!PS-Adobe-3.0
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica
%%+ font Courier
%%Pages: (atend)
%%EndComments

%%BeginProlog
%=== <string1> <string2> strcat <string>

/strcat
{
  2 dict begin
    /s2 exch def
    /s1 exch def
    
    s1 length s2 length add string
    dup 0 s1 putinterval
    dup s1 length s2 putinterval
  end
} bind def


%=== <string> getLines <array of strings>

/getLines
{
  4 dict begin
    /str exch def                         % input string
    /returnedArray str length array def   % array to return
    /i 0 def                              % current index in array
    /line () def                          % current line in array

    % Browse string
    str
    {
      % If character is a new line
      dup 10 eq
      {
        % Delete character from stack
        pop
        % Put line at current position in array
        returnedArray i line put
        /i i 1 add def
        % Reinitialize current line
        /line () def
      }
      % If character is not a new line
      {
        % Make a single character string with current char
        1 string dup 0 4 -1 roll put
        % Concatenate to current line
        line exch strcat /line exch def
      }
      ifelse
    } forall
    % Add last line to returned array if needed
    line length 0 ne { returnedArray i line put } { /i i 1 sub def } ifelse
    % Make copy of returned array to limit memory usage
    [
    0 1 i
    {
      returnedArray exch get
    } for
    ]
  end
} bind def


%=== <string> <width> splitString <array of strings>

/splitString
{
  10 dict begin
    /width exch def
    /splittedString exch def
    /stringLength splittedString length def
    /returnedArray stringLength array def
    /lastIndex 0 def
    /line () def
    /word () def
    /firstWord true def
    /startOfLine true def

    % Browse string to split with an extra space at the end
    splittedString ( ) strcat
    {
      % Get current char
      /curChar exch def
      % If current char is a space or a return and its not the beginning of the line
      curChar 32 eq curChar 10 eq or startOfLine not and
      {
        % Check width for current line + space + word
        word stringwidth pop
        firstWord not line length 0 ne and
        {
          line stringwidth pop add
          ( ) stringwidth pop add
        } if
        % If line will be too wide
        width gt
        {
          % Append last line to array to return if any
          line length 0 ne
          {
            % Add a non printing null character to mark space place
            returnedArray lastIndex line (\0) strcat put
            /lastIndex lastIndex 1 add def
          } if
          % Reset line
          /line word def
        }
        % If line isn't too wide
        {
          % Concatenate space and word to current line
          firstWord line length 0 eq or
          { /line word def }
          { /line line ( ) strcat word strcat def }
          ifelse
        } ifelse
        % Reset current word
        /word () def
        /firstWord false def
        % If character was a return
        curChar 10 eq
        {
          % New line, adding a non printing null character to mark return place
          returnedArray lastIndex line (\0) strcat put
          /lastIndex lastIndex 1 add def
          /line () def
          /firstWord true def
          /startOfLine true def
        } if
      }
      % If current char is not a space or beginning of the line
      {
        % If character is a new line (and we're at line start)
        curChar 10 eq
        {
          % Just add an empty line with a \0 for the carriage return to the returned array
          returnedArray lastIndex (\0) put
          /lastIndex lastIndex 1 add def
          % Next line
          /line () def
          /firstWord true def
        }
        % If character is not a new line
        {
          % If character is not a space, we're not at the beginning of the line anymore
          curChar 32 ne { /startOfLine false def } if
          % Put current char in a 1 character string
          1 string dup 0 curChar put
          % Special case: if the word is already too long and more than 1 character long
          dup stringwidth pop word stringwidth pop add
          width gt word length 1 ge and
          {
            % If there was a current line, add it to returned array
            line length 0 ne
            {
              % Add non-printing null character to mark space place
              returnedArray lastIndex line (\0) strcat put
              /lastIndex lastIndex 1 add def
            } if
            % Add word to returned array
            returnedArray lastIndex word put
            /lastIndex lastIndex 1 add def
            % Reset line and word
            /line () def
            /word () def
            /firstWord false def
          } if
          % Append current char to current word
          word exch strcat /word exch def
        } ifelse
      } ifelse
    } forall
    % Append last line (if any) to returned array
    line length 0 ne
    {
      returnedArray lastIndex line put
      /lastIndex lastIndex 1 add def
    } if
    % Return significant elements in built array
    returnedArray 0 lastIndex getinterval
  end
} bind def


%=== <red> <green> <blue> setTextBackgroundColor -

/textBackgroundColor [ 1.0 1.0 1.0 ] def

/setTextBackgroundColor
{
  textBackgroundColor exch 2 exch put
  textBackgroundColor exch 1 exch put
  textBackgroundColor exch 0 exch put
} bind def


%=== <mark> { <index> <red> <green> <blue> }* setTextColors -

% Array for area start indices - elements are integers
/areaStartIndices 0 array def
% Array for area colors - elements are 3-element arrays (red, green, blue)
/areaColors 0 array def

/setTextColors
{
  % Get number of areas
  counttomark 4 idiv
  % Create array for start indices and for colors
  dup array /areaStartIndices exch def
  dup array /areaColors exch def
  % Browse stack content
  1 sub -1 0      %for
  {
    % Array for color
    3 array dup                         % start red green blue i color-array color-array
    6 -1 roll                           % start green blue i color-array color-array red
    0 exch put dup                      % start green blue i color-array color-array
    5 -1 roll                           % start blue i color-array color-array green
    1 exch put dup                      % start blue i color-array color-array
    4 -1 roll                           % start i color-array color-array blue
    2 exch put                          % start i color-array
    % Put color in area colors
    areaColors 2 index 3 -1 roll put    % start i
    % Put start index in area start indices
    areaStartIndices exch 3 -1 roll put
  } for
  cleartomark
} bind def


%=== <x> <y> <hAlign> <vAlign> <text> <justify> <underline> drawString -

/drawString
{
  % Get area start indices and colors in local dictionary
  areaStartIndices areaColors
  16 dict begin
    /areaColors exch def
    /areaStartIndices exch def
    
    /underline exch def
    /justify exch def
    getLines /lines exch def
    /vAlign exch def
    /hAlign exch def
    /y exch def
    /x exch def
    
    % Get current font height
    /curFontBBox currentfont /FontBBox get def
    /curFontMatrix currentfont /FontMatrix get def
    /curFontBBox load 2 get /curFontBBox load 3 get curFontMatrix transform exch pop
    dup /baseLineHeight exch def
    /curFontBBox load 0 get /curFontBBox load 1 get curFontMatrix transform exch pop
    sub /lineHeight exch def
    
    % Indices in text and in area arrays
    /charIndex 0 def
    /areaIndex 0 def
    
    % Compute coordinates for text from given coordinates and alignments
    x
    hAlign justify ne
    {
      % Compute maximum display length for lines in string to print
      /width 0 def
      lines
      {
        stringwidth pop dup width gt { /width exch def } { pop } ifelse
      } forall
      % Adjust x coordinate
      justify hAlign sub width mul 2 div add
    } if
    y baseLineHeight sub
    vAlign 0 le
    {
      lines length lineHeight mul vAlign 0 eq { 2 div } if add
    } if
    % Draw text
    moveto
    % Browse lines
    lines
    {
      gsave
        dup stringwidth pop /width exch def
        justify 0 ge
        {
          width
          justify 0 eq { 2 div } if
          neg 0 rmoveto
        } if
        % Bounding box for text if needed
        true textBackgroundColor { -1.0 eq and } forall not
        {
          gsave
            textBackgroundColor { } forall setrgbcolor
            0 setlinewidth
            0 baseLineHeight rlineto
            width 0 rlineto
            0 lineHeight neg rlineto
            width neg 0 rlineto
            closepath
            fill
          grestore
        } if
        % Text underlining if needed
        underline 1 eq
        {
          gsave
            areaColors 0 get dup 0 get exch dup 1 get exch 2 get setrgbcolor
            1 setlinewidth
            0 -2 rmoveto
            width 0 rlineto
            stroke
          grestore
        } if
        % Browse text
        {
          % If index is the start of the next area
          areaIndex areaStartIndices length lt
          {
            charIndex areaStartIndices areaIndex get eq
            {
              % If it is, change color
              areaColors areaIndex get 0 get
              areaColors areaIndex get 1 get
              areaColors areaIndex get 2 get
              setrgbcolor
              % Next area
              /areaIndex areaIndex 1 add def
            } if
          } if
          % Print current character
          1 string dup 0 4 -1 roll put show
          % Next character
          /charIndex charIndex 1 add def
        } forall
      grestore
      % Next line
      0 lineHeight neg rmoveto
      % One character for the new line
      /charIndex charIndex 1 add def
    } forall
  end
} bind def


%=== <xCenter> <yCenter> <width> <text> <justify> <h-shrink> <underline> drawTextBox -

/drawTextBox
{
  % Get area start indices and colors in local dictionary
  areaStartIndices areaColors
  18 dict begin
    /areaColors exch def
    /areaStartIndices exch def
    
    /underline exch def
    /hShrink exch def
    /justify exch def
    /text exch def
    /width exch def
    /yCenter exch def
    /xCenter exch def
    
    % Get current font height
    /curFontBBox currentfont /FontBBox get def
    /curFontMatrix currentfont /FontMatrix get def
    /curFontBBox load 2 get /curFontBBox load 3 get curFontMatrix transform exch pop
    dup /baseLineHeight exch def
    /curFontBBox load 0 get /curFontBBox load 1 get curFontMatrix transform exch pop
    sub /lineHeight exch def
    
    % Indices in text and in area arrays
    /charIndex 0 def
    /areaIndex 0 def
    /lastColor [ 0.0 0.0 0.0 ] def
    
    % Split string according to width
    text width splitString
    % If text box should shrink to shortest line
    dup
    hShrink 1 eq
    {
      % Set width to length of longest line
      /maxLength 0 def
      {
        stringwidth pop
        dup maxLength gt { /maxLength exch def } { pop } ifelse
      } forall
      width maxLength gt { /width maxLength def } if
    }
    {
      pop
    } ifelse
    % Compute first line Y coordinate
    dup length lineHeight mul 2 div baseLineHeight sub yCenter add
    % Move to center point in first line
    newpath xCenter exch moveto
    % Browse split string array
    {
      % Set back last color, that may have been forgotten by the grestore
      lastColor 0 get lastColor 1 get lastColor 2 get setrgbcolor
      gsave
        % Draw justified string
        dup stringwidth pop /strWidth exch def
        justify 0 eq
        {
          % Center
          strWidth 2 div neg 0 rmoveto
        }
        {
          justify 0 lt
          {
            % Left
            width 2 div neg 0 rmoveto
          }
          {
            % Right
            strWidth width 2 div exch sub 0 rmoveto
          } ifelse
        } ifelse
        % Text bounding box if needed
        true textBackgroundColor { -1.0 eq and } forall not
        {
          gsave
            textBackgroundColor { } forall setrgbcolor
            0 baseLineHeight rlineto
            strWidth 0 rlineto
            0 lineHeight neg rlineto
            strWidth neg 0 rlineto
            closepath
            fill
          grestore
        } if
        % Text underlining if needed
        underline 1 eq
        {
          gsave
            areaColors 0 get dup 0 get exch dup 1 get exch 2 get setrgbcolor
            1 setlinewidth
            0 -2 rmoveto
            strWidth 0 rlineto
            stroke
          grestore
        } if
        % Browse text
        {
          % If index is the start of the next area
          areaIndex areaStartIndices length lt
          {
            charIndex areaStartIndices areaIndex get eq
            {
              % If it is, change color
              /lastColor areaColors areaIndex get def
              lastColor 0 get lastColor 1 get lastColor 2 get setrgbcolor
              % Next area
              /areaIndex areaIndex 1 add def
            } if
          } if
          % Print current character if printable
          dup 0 ne { 1 string dup 0 4 -1 roll put show } { pop } ifelse
          % Next character
          /charIndex charIndex 1 add def
        } forall
      grestore
      % Go one line down
      0 lineHeight neg rmoveto
    } forall
  end
} bind def


% === mark <x1> <x2> ... <xn> max <xmax>

/max
{
  1 dict begin
    /result exch def
    {
      dup mark eq { pop exit } if
      dup result gt { /result exch def } { pop } ifelse
    } loop
    result
  end
} def %bind def


% === mark <x1> <x2> ... <xn> min <xmin>

/min
{
  1 dict begin
    /result exch def
    {
      dup mark eq { pop exit } if
      dup result lt { /result exch def } { pop } ifelse
    } loop
    result
  end
} def %bind def


%=== <r> <g> <b> rgb2hsv <h> <s> <v>

/rgb2hsv
{
  11 dict begin
    /b exch def
    /g exch def
    /r exch def
    /h 0 def /s 0 def
    /v mark r g b max def
    /min_coord mark r g b min def
    /dist v min_coord sub def
    v 0 ne { /s dist v div def } if
    s 0 eq
    {
      /h -1 def
    }
    {
      /rr v r sub dist div def
      /gg v g sub dist div def
      /bb v b sub dist div def
      v r eq
      {
        min_coord g eq
        { /h 5 bb add def }
        { /h 1 gg sub def }
        ifelse
      }
      {
        v g eq
        {
          min_coord b eq
          { /h 1 rr add def }
          { /h 3 bb sub def }
          ifelse
        }
        {
          min_coord r eq
          { /h 3 gg add def }
          { /h 5 rr sub def }
          ifelse
        } ifelse
      } ifelse
      /h h 60 mul def
    } ifelse
    h s v
  end
} def %bind def


%=== <h> <s> <v> hsv2rgb <r> <g> <b>

/hsv2rgb
{
  12 dict begin
    /v exch def
    /s exch def
    /h exch def
    /r 0 def /g 0 def /b 0 def
    h -1 eq h 360 eq or { /h 0 def } if
    /hh h 60.0 div def
    /i hh cvi def
    /f hh i sub def
    /p1 1 s sub v mul def
    /p2 1 f s mul sub v mul def
    /p3 1 1 f sub s mul sub v mul def
    [ [ v p3 p1 ]
      [ p2 v p1 ]
      [ p1 v p3 ]
      [ p1 p2 v ]
      [ p3 p1 v ]
      [ v p1 p2 ]
    ] i get { } forall
  end
} def %bind def


%=== <r> <g> <b> <s_factor> <v_factor> alterColor <r> <g> <b>

/alterColor
{
  2 dict begin
    /v_factor exch def
    /s_factor exch def
    s_factor 1 ne v_factor 1 ne or
    {
      rgb2hsv
      mark exch v_factor mul 1 min exch
      mark exch s_factor mul 1 min exch
      hsv2rgb
    } if
  end
} def %bind def


%=== <x_left> <x_right> <y_bottom> <r_bottom> <g_bottom> <b_bottom> <y_top> <r_top> <g_top> <b_top> boxGradientFill -
/gradientResolution 0.2 def

/boxGradientFill
{
  14 dict begin
    /b_top exch def /g_top exch def /r_top exch def
    /y_top exch def
    /b exch def /g exch def /r exch def
    /y_bottom exch def
    /x_right exch def /x_left exch def
    
    /y_span y_top y_bottom sub gradientResolution div def
    y_span 0 ne
    {
      /r_incr r_top r sub y_span div def
      /g_incr g_top g sub y_span div def
      /b_incr b_top b sub y_span div def
      gradientResolution setlinewidth
      y_bottom gradientResolution y_top
      {
        r g b setrgbcolor
        x_right exch dup x_left exch moveto lineto stroke
        /r r r_incr add def /g g g_incr add def /b b b_incr add def
      } for
    } if
  end
} def %bind def


%=== pathGradientFill

/pathGradientSpec [ [ 0 1 1 ] [ 1 1 1 ] ] def

/pathGradientFill
{
  10 dict begin
    pathbbox
    /y_top exch def /x_right exch def
    /y_bottom exch def /x_left exch def
    clip
    1 1 pathGradientSpec length 1 sub
    {
      dup
      1 sub pathGradientSpec exch get { } forall
      /bottom_v_factor exch def /bottom_s_factor exch def /bottom_y_factor exch def
      pathGradientSpec exch get { } forall
      /top_v_factor exch def /top_s_factor exch def /top_y_factor exch def
      gsave
        x_left x_right
        y_bottom y_top y_bottom sub bottom_y_factor mul add
        currentrgbcolor bottom_s_factor bottom_v_factor alterColor
        y_bottom y_top y_bottom sub top_y_factor mul add
        currentrgbcolor top_s_factor top_v_factor alterColor
        boxGradientFill
      grestore
    } for
} def %bind def

ISOLatin1Encoding aload length array astore /ISOLatin1EuroEncoding exch def
ISOLatin1EuroEncoding 164 /Euro put
%%EndProlog

%%BeginSetup

/Helvetica findfont dup length dict begin
{ 1 index /FID ne { def } { pop pop } ifelse } forall
/Encoding ISOLatin1EuroEncoding def
currentdict end
/Helvetica-ISOLatin1 exch definefont pop
/Courier findfont dup length dict begin
{ 1 index /FID ne { def } { pop pop } ifelse } forall
/Encoding ISOLatin1EuroEncoding def
currentdict end
/Courier-ISOLatin1 exch definefont pop
/Helvetica findfont dup length dict begin
{ 1 index /FID ne { def } { pop pop } ifelse } forall
/Encoding ISOLatin1EuroEncoding def
currentdict end
/Helvetica-ISOLatin1 exch definefont pop
1 setlinejoin

%%EndSetup

%%Page: 1 1

/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 1.0
44 0.0 0.0 0.0
setTextColors
20 793 -1 0 (/* Here is the declarations of the data type) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 1.0
44 0.0 0.0 0.0
setTextColors
20 779 -1 0 (   and the signals that will be used in the) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 1.0
17 0.0 0.0 0.0
setTextColors
20 765 -1 0 (   testcases   */) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 751 -1 0 () -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 1.0
44 0.0 0.0 0.0
setTextColors
20 737 -1 0 (/* Code written by: Juan Pablo Giron Ruiz */) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 1.0 0.0 0.0
6 0.0 0.0 0.0
setTextColors
20 695 -1 0 (module declaration_Signals) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 1.0 0.0 0.0
1 0.0 0.0 0.0
setTextColors
20 681 -1 0 ({) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 0.0 0.0 1.0
40 0.0 0.0 0.0
setTextColors
20 653 -1 0 (  /* Step 1. Definition of data Types */) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 639 -1 0 () -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
6 0.0 0.0 0.0
7 1.0 0.0 0.0
14 0.0 0.0 0.0
20 1.0 0.0 0.0
21 0.0 0.0 0.0
setTextColors
20 625 -1 0 (  type integer spots;) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
6 0.0 0.0 0.0
7 1.0 0.0 0.0
14 0.0 0.0 0.0
22 1.0 0.0 0.0
23 0.0 0.0 0.0
setTextColors
20 611 -1 0 (  type integer numCtrl;) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
6 0.0 0.0 0.0
7 1.0 0.0 0.0
14 0.0 0.0 0.0
22 1.0 0.0 0.0
23 0.0 0.0 0.0
setTextColors
20 597 -1 0 (  type integer numZone;) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
6 0.0 0.0 0.0
7 1.0 0.0 0.0
14 0.0 0.0 0.0
29 1.0 0.0 0.0
30 0.0 0.0 0.0
setTextColors
20 583 -1 0 (  type integer numEntryWay_In;) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
6 0.0 0.0 0.0
7 1.0 0.0 0.0
14 0.0 0.0 0.0
30 1.0 0.0 0.0
31 0.0 0.0 0.0
setTextColors
20 569 -1 0 (  type integer numEntryWay_Out;) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
6 0.0 0.0 0.0
7 1.0 0.0 0.0
14 0.0 0.0 0.0
22 1.0 0.0 0.0
23 0.0 0.0 0.0
setTextColors
20 555 -1 0 (  type integer ID_User;) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 541 -1 0 () -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 0.0 0.0 1.0
42 0.0 0.0 0.0
setTextColors
20 527 -1 0 (  /* Step 2. Declaration of the Signals */) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 0.0 0.0 1.0
46 0.0 0.0 0.0
setTextColors
20 513 -1 0 (  /* The PURE Signals are enumerated, signals) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 1.0
36 0.0 0.0 0.0
setTextColors
20 499 -1 0 (  with parameters are type record */) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 0.0 0.0 1.0
54 0.0 0.0 0.0
setTextColors
20 485 -1 0 (  /* The name of the signals must be the same that in) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 1.0
15 0.0 0.0 0.0
setTextColors
20 471 -1 0 (  SDL system */) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 457 -1 0 () -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 0.0 0.0 1.0
30 0.0 0.0 0.0
setTextColors
20 443 -1 0 (  /*Signals with parameters */) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 0.0 0.0 1.0
28 0.0 0.0 0.0
setTextColors
20 429 -1 0 (  /* Channel cDisplay_main*/) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 415 -1 0 () -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
6 0.0 0.0 0.0
7 1.0 0.0 0.0
13 0.0 0.0 0.0
setTextColors
20 401 -1 0 (  type record sReqInfoCtrlZone) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
3 0.0 0.0 0.0
setTextColors
20 387 -1 0 (  {) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 373 -1 0 (      numCtrl num_Ctrl,) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 359 -1 0 (      numZone num_Zone) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
3 0.0 0.0 0.0
setTextColors
20 345 -1 0 (  }) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 331 -1 0 () -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
6 0.0 0.0 0.0
7 1.0 0.0 0.0
13 0.0 0.0 0.0
setTextColors
20 317 -1 0 (  type record sInfoCtrlZone) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
3 0.0 0.0 0.0
setTextColors
20 303 -1 0 (  {) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 289 -1 0 (      spots freeSpots) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
3 0.0 0.0 0.0
setTextColors
20 275 -1 0 (  }) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 261 -1 0 () -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 0.0 0.0 1.0
30 0.0 0.0 0.0
setTextColors
20 247 -1 0 (  /* Channel cEnv_pTesting  */) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 233 -1 0 () -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
6 0.0 0.0 0.0
7 1.0 0.0 0.0
13 0.0 0.0 0.0
setTextColors
20 219 -1 0 (  type record sEntryCarCtrl) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
3 0.0 0.0 0.0
setTextColors
20 205 -1 0 (  {) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 191 -1 0 (      numCtrl num_Ctrl) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
3 0.0 0.0 0.0
setTextColors
20 177 -1 0 (  }) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
6 0.0 0.0 0.0
7 1.0 0.0 0.0
13 0.0 0.0 0.0
setTextColors
20 163 -1 0 (  type record sOutCarCtrl) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
3 0.0 0.0 0.0
setTextColors
20 149 -1 0 (  {) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 135 -1 0 (      numCtrl num_Ctrl) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
3 0.0 0.0 0.0
setTextColors
20 121 -1 0 (  }) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
6 0.0 0.0 0.0
7 1.0 0.0 0.0
13 0.0 0.0 0.0
setTextColors
20 107 -1 0 (  type record sEntryCarZone) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
3 0.0 0.0 0.0
setTextColors
20 93 -1 0 (  {) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 79 -1 0 (      numZone num_Zone) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
3 0.0 0.0 0.0
setTextColors
20 65 -1 0 (  }) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
6 0.0 0.0 0.0
7 1.0 0.0 0.0
13 0.0 0.0 0.0
setTextColors
20 51 -1 0 (  type record sOutCarZone) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
3 0.0 0.0 0.0
setTextColors
20 37 -1 0 (  {) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 23 -1 0 (      numZone num_Zone) -1 0 drawString
showpage

%%Page: 2 2

/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
3 0.0 0.0 0.0
setTextColors
20 807 -1 0 (  }) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 793 -1 0 () -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 779 -1 0 () -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 0.0 0.0 1.0
23 0.0 0.0 0.0
setTextColors
20 765 -1 0 (  /*Channel cEnv_Main*/) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 751 -1 0 () -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
6 0.0 0.0 0.0
7 1.0 0.0 0.0
17 0.0 0.0 0.0
34 1.0 0.0 0.0
35 0.0 0.0 0.0
52 1.0 0.0 0.0
53 0.0 0.0 0.0
setTextColors
20 737 -1 0 (  type enumerated sCreateCtrlZone {e_sCreateCtrlZone}) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
6 0.0 0.0 0.0
7 1.0 0.0 0.0
17 0.0 0.0 0.0
32 1.0 0.0 0.0
33 0.0 0.0 0.0
48 1.0 0.0 0.0
49 0.0 0.0 0.0
setTextColors
20 723 -1 0 (  type enumerated sOkCreateCtrl {e_sOkCreateCtrl}) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
6 0.0 0.0 0.0
7 1.0 0.0 0.0
17 0.0 0.0 0.0
34 1.0 0.0 0.0
35 0.0 0.0 0.0
52 1.0 0.0 0.0
53 0.0 0.0 0.0
setTextColors
20 709 -1 0 (  type enumerated sOkCreationZone {e_sOkCreationZone}) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
6 0.0 0.0 0.0
7 1.0 0.0 0.0
17 0.0 0.0 0.0
34 1.0 0.0 0.0
35 0.0 0.0 0.0
52 1.0 0.0 0.0
53 0.0 0.0 0.0
setTextColors
20 695 -1 0 (  type enumerated sCreateEntryWay {e_sCreateEntryWay}) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 681 -1 0 () -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
6 0.0 0.0 0.0
7 1.0 0.0 0.0
13 0.0 0.0 0.0
setTextColors
20 667 -1 0 (  type record sAddZone) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
3 0.0 0.0 0.0
setTextColors
20 653 -1 0 (  {) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 639 -1 0 (      numCtrl num_Ctrl,) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 625 -1 0 (      spots totalSpots,) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 611 -1 0 (      spots freeSpots) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
3 0.0 0.0 0.0
setTextColors
20 597 -1 0 (  }) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 583 -1 0 () -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 0.0 0.0 1.0
22 0.0 0.0 0.0
setTextColors
20 569 -1 0 (  /*Channel cEnv_CR */) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
6 0.0 0.0 0.0
7 1.0 0.0 0.0
13 0.0 0.0 0.0
setTextColors
20 555 -1 0 (  type record sIDUserFromEnv) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
3 0.0 0.0 0.0
setTextColors
20 541 -1 0 (  {) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 527 -1 0 (      ID_User ID) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
2 1.0 0.0 0.0
3 0.0 0.0 0.0
setTextColors
20 513 -1 0 (  }) -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 0.0 0.0 0.0
setTextColors
20 499 -1 0 () -1 0 drawString
/Courier-ISOLatin1 findfont 11 scalefont setfont

1.0 1.0 1.0 setTextBackgroundColor
mark
0 1.0 0.0 0.0
1 0.0 0.0 0.0
setTextColors
20 485 -1 0 (}) -1 0 drawString
showpage

%%Trailer
%%Pages: 2
%%EOF
